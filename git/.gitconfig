[http]
    sslVerify = false
[user]
    name = Mátyás Budavári
    email = budavariam@gmail.com
[core]
    editor = vim
    excludesfile = ~/.gitignore
[alias]
    # ac - add the current working tree changes to the previous commit
    ac = !git add . && git commit --am
    # ack - search for pattern group result by files
    ack = -c color.grep.filename='bold green' -c color.grep.match='black yellow' grep --break --heading -n
    # amend - amend commit and show the modified chunks
    amend = commit --amend -v
    # ci - commit with showing the chunks
    ci = commit -v
    # cloneurl - get the remote url of the repository
    cloneurl = config --get remote.origin.url
    # ctags -
    ctags = !.git/hooks/ctags
    # df - Changes between the index and your last commit; what you would be committing if you run "git commit" without "-a" option.
    df = diff --cached
    # fa - Fetch all remotes
    fa = fetch --all
    # find - REgex Search in commit names, report who, when, what modifications
    find = log --all --pretty=format:\"%C(yellow)%h%C(reset) %C(green)%an%C(reset) %s %C(blue)(%ar)%C(reset)\n%b\" --name-status --grep
    # filelog - Show git log with chunk info
    filelog = log -u
    # la - list aliases
    la = "!git config -l | grep alias | cut -c 7- | less"
    # ld - oneline history with date and username
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    # ll - oneline with userinfo and num stats
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    # locate - Search in file paths
    locate = "!git ls-files | grep --color=auto"
    # logf - log with separate commit/author data (different when patches applied)
    logf = log --pretty=fuller
    # lol - oneline abbreviated comments with graph
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    # lola - all branches oneline abbreviated comments with graph
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    # new - Show last commit without merges in one line with abbreviated commithash
    new = log --abbrev-commit --pretty=oneline --no-merges @{1}..
    # pend - Show pending commits
    pend = log @{upstream}..
    # rlog -
    rlog = log --pretty=format:\"%C(yellow)%h%C(reset) %C(blue)%cr%C(green) %cn %C(reset)%s%C(reset)\"
    # undelete - undelete a file to the last known state
    undelete = !sh -c 'git checkout $(git rev-list -n 1 HEAD -- "$1")^ -- "$1"' -
    # root - Show the repository root folder
    root = rev-parse --show-toplevel
    # spull - git pull in an svn repository
    spull = !git svn fetch && git-svn rebase
    # spull - git push in an svn repository
    spush = !git svn dcommit
    # up - git fetch && git rebase (instead of fetch&merge)
    up = pull --rebase
    # wdiff - show the differences colored in line
    wdiff = diff --color-words
    # Simple abbreviations
    st = status
    co = checkout
    sa = stash apply
    sl = stash list
    sp = stash pop
    ss = stash save
[color]
    ui = auto
[diff]
    renames = copy
    algorithm = patience
[merge]
    tool = meld
    conflictstyle = diff3
[push]
    default = simple
[apply]
    whitespace = fix
[help]
    autocorrect = 1
[rerere]
    enabled = 1
[mergetool "meld"]
    path = /usr/bin/meld
