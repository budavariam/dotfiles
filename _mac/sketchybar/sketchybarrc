# This is a demo config to showcase some of the most important commands.
# It is meant to be changed and configured, as it is intentionally kept sparse.
# For a (much) more advanced configuration example see my dotfiles:
# https://github.com/FelixKratz/dotfiles
# sketchybar --reload

PLUGIN_DIR="$CONFIG_DIR/plugins"

##### Bar Appearance #####
# Configuring the general appearance of the bar.
# These are only some of the options available. For all options see:
# https://felixkratz.github.io/SketchyBar/config/bar
# If you are looking for other colors, see the color picker:
# https://felixkratz.github.io/SketchyBar/config/tricks#color-picker

sketchybar --bar position=top height=40 blur_radius=30 color=0xff001526

##### Changing Defaults #####
# We now change some default values, which are applied to all further items.
# For a full list of all available item properties see:
# https://felixkratz.github.io/SketchyBar/config/items

default=(
  padding_left=5
  padding_right=5
  icon.font="Hack Nerd Font:Bold:14.0"
  label.font="Jetbrains Mono:Bold:14.0"
  icon.color=0xffffffff
  label.color=0xffffffff
  icon.padding_left=4
  icon.padding_right=4
  label.padding_left=4
  label.padding_right=4
)
sketchybar --default "${default[@]}"

##### Adding Mission Control Space Indicators #####
# Let's add some mission control spaces:
# https://felixkratz.github.io/SketchyBar/config/components#space----associate-mission-control-spaces-with-an-item
# to indicate active and available mission control spaces.

# SPACE_ICONS=("1" "2" "3" "4" "5" "6" "7" "8" "9" "10")
# for i in "${!SPACE_ICONS[@]}"
# do
#   sid="$(($i+1))"
#   space=(
#     space="$sid"
#     icon="${SPACE_ICONS[i]}"
#     icon.padding_left=7
#     icon.padding_right=7
#     background.color=0x40ffffff
#     background.corner_radius=5
#     background.height=25
#     label.drawing=off
#     script="$PLUGIN_DIR/space.sh"
#     click_script="yabai -m space --focus $sid"
#   )
#   sketchybar --add space space."$sid" left --set space."$sid" "${space[@]}"
# done

##### Adding Left Items #####
# We add some regular items to the left side of the bar, where
# only the properties deviating from the current defaults need to be set

sketchybar --add item logo left \
           --set logo icon=􀣺 label.drawing=off \
           --add item front_app left \
           --set front_app icon.drawing=off script="$PLUGIN_DIR/front_app.sh" \
           --subscribe front_app front_app_switched \
           --add event aerospace_workspace_change \
           --add item current_workspace left \
           --subscribe current_workspace aerospace_workspace_change \
           --set current_workspace \
                 display=active \
                 icon="􀣳" \
                 background.color=0x88000000 \
                 popup.height=20 \
                 script="$CONFIG_DIR/plugins/aerospace.sh" \
                 click_script="sketchybar --set current_workspace popup.drawing=toggle" \
                 popup.align=center \
           --add item weather left \
           --set weather \
              update_freq=600 \
              script="$CONFIG_DIR/plugins/weather.sh" \
              background.drawing=on

for sid in $(aerospace list-workspaces --all); do
    sketchybar --add item space.s_$sid popup.current_workspace \
               --set space.s_$sid \
                     label="$sid" \
                     background.color=0x55000000 \
                     background.drawing=on \
                     background.corner_radius=5 \
                     width=35 \
                     click_script="aerospace workspace $sid && sketchybar --set current_workspace label=\"$sid\" && sketchybar --set current_workspace popup.drawing=off"
done

##### Adding Right Items #####
# In the same way as the left items we can add items to the right side.
# Additional position (e.g. center) are available, see:
# https://felixkratz.github.io/SketchyBar/config/items#adding-items-to-sketchybar

# Some items refresh on a fixed cycle, e.g. the clock runs its script once
# every 10s. Other items respond to events they subscribe to, e.g. the
# volume.sh script is only executed once an actual change in system audio
# volume is registered. More info about the event system can be found here:
# https://felixkratz.github.io/SketchyBar/config/events

sketchybar --add item clock right \
           --set clock update_freq=10 icon=  script="$PLUGIN_DIR/clock.sh" \
           --add item volume right \
           --set volume script="$PLUGIN_DIR/volume.sh" \
           --subscribe volume volume_change \
           --add item battery right \
           --set battery update_freq=120 script="$PLUGIN_DIR/battery.sh" \
           --subscribe battery system_woke power_source_change \
           --add item vpn_status right \
           --set vpn_status icon="􀞡" update_freq=30 label.drawing=off script="$CONFIG_DIR/plugins/vpn_status.sh" \
           --add item wifi_status right \
           --subscribe wifi_status wifi_change \
           --set wifi_status icon="􁣡" label.drawing=off script="$CONFIG_DIR/plugins/wifi_status.sh" \
           --add event focus_mode_on "_NSDoNotDisturbEnabledNotification" \
           --add event focus_mode_off "_NSDoNotDisturbDisabledNotification" \
           --add item focus_status right \
           --subscribe focus_status focus_mode_on focus_mode_off \
           --set focus_status icon="󰸘" label.drawing=off script="$CONFIG_DIR/plugins/focus_status.sh" \
           --add item keyboard right \
           --add event input_source_changed "AppleSelectedInputSourcesChangedNotification" \
           --set keyboard label.drawing=off script="$HOME/.config/sketchybar/plugins/keyboard.sh" \
           --subscribe keyboard input_source_changed

## NOTE
## SYSTEM EVENTS: 
### https://github.com/FelixKratz/SketchyBar/discussions/151
### https://developer.apple.com/documentation/foundation/nsnotificationname
### log show --predicate 'eventMessage contains[c] "register name"' --last 1h | awk '{ print $12 }' | sort | uniq -c | sort

##### Force all scripts to run the first time (never do this in a script) #####
sketchybar --update
